@Library('migrationqe-automation-lib') _
pipeline{
    agent {
        label 'minikube-node' 
    }
    options{
        ansiColor('xterm')
    }
    environment{
        PATH="$PATH:/usr/local/go/bin" 
        JIRA_CLOUD_PASSWORD=credentials('mta_jira_cloud_token')
        JIRA_SERVER_TOKEN=credentials('mta_jira_stage_token')
        CRED=credentials('tackle_git_pass')
        GITHUB_USER="$CRED_USR"
        GITHUB_TOKEN="$CRED_PSW"
    }
    stages{
        stage('Install konveyor operator & run on minikube'){  
            steps{
                script{
                    checkout scm
                    tackle.setGoTestsEnvVars() //Sets env sensitive env vars
                    tackle.deployKonveyorOnMinikube()
                    echo "Applying tackle CR"
                    tackle.applyTackleCR()
                }
            }
        }
        stage('Run konveyor go tier3 tests'){ 
            steps{
                script{
                    env.MINIKUBE_IP = sh(
                        script : 'minikube ip',
                        returnStdout: true
                    ).trim()
                    env.HUB_BASE_URL="http://"+env.MINIKUBE_IP+"/hub" 
                    ocp.pollRouteUntilReady("http://"+env.MINIKUBE_IP,15,30)
                    sh "sleep 40s" //Grace period after the application is serving correctly.
                    sh (script:"make test-tier3",
                        label: "Running tier3 tests"
                        )
                }
            }
        }
    }
    post{
        always{
            script{
                cleanWs()
            }
        }
        success{
            script{
                tackle.writeBuildStatus(passed=true,pipeline="tier3-nightly")
            }
        }
        failure{
            script{
                tackle.writeBuildStatus(passed=false,pipeline="tier3-nightly") 
            }
        } 
    }
}
